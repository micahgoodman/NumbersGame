<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(so_Incorrect, 1, 0);
var i;
for (i=0; i&lt;array_length_1d(global.NUM_OBJECTS); i++)
{
if instance_exists(global.NUM_OBJECTS[i])
    {
    global.NUM_OBJECTS[i].used = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with o_Target
    {
    instance_destroy();
    }
    
audio_play_sound(so_Correct, 1, 0);
    
var i;
/*for (i=0; i&lt;9; i++)
    {
    with o_NumberSpawner.numbers[i]
        {

        instance_destroy();
        }
    }
*/
for (i=0; i&lt;array_length_1d(global.NUM_OBJECTS); i++)
    {
    if instance_exists(global.NUM_OBJECTS[i])
        {
        global.NUM_OBJECTS[i].used = false;
        }
    }
    
o_NumberSpawner.alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(o_LadyBeaver)
{
if global.LEVEL=="addition1" || global.LEVEL=="addition2"
{
    if global.FIRST+global.SECOND == global.TARGET
    {
    score += 1000;

    global.FIRST = 0;
    global.SECOND = 0;
    
    alarm[0] = room_speed*1.25;
    
    instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST+global.SECOND != global.TARGET
    {
    score -= 250;
    global.FIRST = 0;
    global.SECOND = 0;
    alarm[1] = room_speed*1.25;
    }
}



if global.LEVEL == "subtraction1" || global.LEVEL=="subtraction2"
{
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST-global.SECOND==global.TARGET
    {
    score += 1000;
    global.FIRST = 0;
    global.SECOND = 0;
        
    alarm[0] = room_speed*1.25;
    
    instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST-global.SECOND != global.TARGET
    {
    score -= 250;
    alarm[1] = room_speed*1.25;
    global.FIRST = 0;
    global.SECOND = 0;
    }
}



if global.LEVEL == "multiplication1" || global.LEVEL=="multiplication2"
{
    if global.FIRST*global.SECOND == global.TARGET
    {
    score += 1000;
    global.FIRST = 0;
    global.SECOND = 0;
    
    alarm[0] = room_speed*1.25;
    
    instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST*global.SECOND != global.TARGET
    {
    score -= 250;
    alarm[1] = room_speed*1.25;
    global.FIRST = 0;
    global.SECOND = 0;
    }
}



if global.LEVEL == "division1" || global.LEVEL=="division2"
{
    if global.FIRST/global.SECOND == global.TARGET
    {
    score += 1000;
    global.FIRST = 0;
    global.SECOND = 0;
    
    alarm[0] = room_speed*1.25;
    
    instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST/global.SECOND!=global.TARGET
    {
    score -= 250;
    alarm[1] = room_speed*1.25;
    global.FIRST = 0;
    global.SECOND = 0;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

draw_set_color(c_blue);
draw_rectangle(view_xview, view_yview+(view_hview/2), view_xview+view_wview, view_yview+view_hview, false);

draw_set_color(make_color_rgb(135, 206, 250));
draw_rectangle(view_xview, view_yview, view_xview+view_wview, view_yview+(view_hview/4), false);

draw_set_color(c_black);
draw_set_font(f_Info);
draw_text(view_xview+view_wview-100, view_yview+30, "Lumber: " + string(score));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>system1 = part_system_create();
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_disk);
part_type_size(particle1,0.10,0.10,0,0);
part_type_scale(particle1,1,1);
part_type_color2(particle1,16711680,65280);
part_type_alpha1(particle1,1);
part_type_speed(particle1,1,1,0,0);
part_type_direction(particle1,0,359,0,0);
part_type_gravity(particle1,0,270);
part_type_orientation(particle1,0,0,0,0,1);
part_type_blend(particle1,0);
part_type_life(particle1,15,30);
emitter1 = part_emitter_create(system1);
//part_emitter_region(system1,emitter1,view_xview+100,view_xview+100,view_yview+100,view_yview+100,ps_shape_ellipse,1);
//part_emitter_stream(system1,emitter1,particle1,75);

reached = false;
done = false;

num_solved = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>o_Hint.hint = 0;
global.FIRST = 0;
global.SECOND = 0;

score -= 25;

instance_create(x, y, o_WrongShake);

audio_play_sound(so_Incorrect, 1, 0);
var i;
for (i=0; i&lt;array_length_1d(global.NUM_OBJECTS); i++)
{
if instance_exists(global.NUM_OBJECTS[i])
    {
    global.NUM_OBJECTS[i].used = false;
    }
}

done = true;
reached = false;


var i
for (i=0; i&lt;instance_number(o_Number); i++)
{
if instance_find(o_Number, i).y &lt;= view_yview+(view_hview/2)-16
{
with (instance_find(o_Number, i)) instance_destroy();
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num_solved++;

o_Hint.hint = 0;
global.FIRST = 0;
global.SECOND = 0;

if global.LEVEL==1 || global.LEVEL==3 || global.LEVEL==5 || global.LEVEL==7
{
LUMBER += abs(global.TARGET)+(5*global.DAMWAY);
score += 100;
}
else if global.LEVEL==2 || global.LEVEL==4 || global.LEVEL==6 || global.LEVEL==8 || global.LEVEL&gt;8
{
LUMBER += abs(global.TARGET)+(5*global.DAMWAY);
score += 150;
}

with o_Target
    {
    instance_destroy();
    }
    
audio_play_sound(so_Correct, 1, 0);
    
var i;
/*for (i=0; i&lt;9; i++)
    {
    with o_NumberSpawner.numbers[i]
        {

        instance_destroy();
        }
    }
*/
for (i=0; i&lt;array_length_1d(global.NUM_OBJECTS); i++)
    {
    if instance_exists(global.NUM_OBJECTS[i])
        {
        global.NUM_OBJECTS[i].used = false;
        }
    }
    
o_NumberSpawner.alarm[0] = 1;

done = true;
reached = false;


var i
for (i=0; i&lt;instance_number(o_Number); i++)
{
if instance_find(o_Number, i).y &lt;= view_yview+(view_hview/2)-16
{
with (instance_find(o_Number, i)) instance_destroy();
}
}

with (FIRST_NUM)
{
//instance_destroy();
}
FIRST_NUM = o_Number;
with (SECOND_NUM)
{
//instance_destroy();
}
SECOND_NUM = o_Number;

part_emitter_region(system1,emitter1,view_xview+100,view_xview+100,view_yview+100,view_yview+100,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
part_emitter_region(system1,emitter1,view_xview+view_wview-150,view_xview+view_wview-150,view_yview+200,view_yview+200,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
part_emitter_region(system1,emitter1,view_xview+view_wview-300,view_xview+view_wview-300,view_yview+230,view_yview+230,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
part_emitter_region(system1,emitter1,view_xview+10,view_xview+10,view_yview+240,view_yview+240,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
part_emitter_region(system1,emitter1,view_xview+320,view_xview+320,view_yview+15,view_yview+15,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
part_emitter_region(system1,emitter1,view_xview+view_wview-10,view_xview+view_wview-10,view_yview+25,view_yview+25,ps_shape_ellipse,1);
part_emitter_burst(system1, emitter1, particle1, 75);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !instance_exists(o_LadyBeaver)
{
if global.LEVEL==1 || global.LEVEL==2 || global.LEVEL==9
{
    if global.FIRST+global.SECOND==global.TARGET &amp;&amp; global.SECOND!=0
    {
    //alarm[0] = room_speed*(1.25-.75*global.COFFEE);
    
        if reached == true
        {
        o_Hint.hint = 0;
        global.FIRST = 0;
        global.SECOND = 0;
        }
        if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
        {
        alarm[0] = room_speed/4;
        reached = true;
        }
    
    //instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if (global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST+global.SECOND!=global.TARGET) || (global.FIRST!=0 &amp;&amp; global.TARGET-global.FIRST&gt;9) || (global.FIRST!=0 &amp;&amp; global.FIRST&gt;=global.TARGET)
    {
        if reached == true
            {
            o_Hint.hint = 0;
            global.FIRST = 0;
            global.SECOND = 0;
            }
        if global.FIRST!=0 &amp;&amp; global.SECOND!=0
            {
            if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
                {
                alarm[1] = room_speed/4;
                reached = true;
                }
            }
        else if global.FIRST!=0 &amp;&amp; global.SECOND=0
            {
            if FIRST_NUM.y&lt;=NUM_Y
                {
                alarm[1] = room_speed/4;
                reached = true;
                }
            }
    //alarm[1] = room_speed*(1.25-.75*global.COFFEE);
    }
}



if global.LEVEL==3 || global.LEVEL==4 || global.LEVEL==10
{
    if global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST-global.SECOND==global.TARGET
    {
        if reached == true
        {
        o_Hint.hint = 0;
        global.FIRST = 0;
        global.SECOND = 0;
        }
        if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
        {
        alarm[0] = room_speed/4;
        reached = true;
        }
    
    //instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if (global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST-global.SECOND != global.TARGET) || (global.FIRST!=0 &amp;&amp; global.FIRST-global.TARGET&gt;9) || (global.FIRST!=0 &amp;&amp; global.FIRST&lt;=global.TARGET)
    {
        if reached == true
        {
            o_Hint.hint = 0;
            global.FIRST = 0;
            global.SECOND = 0;
        }
        if global.FIRST!=0 &amp;&amp; global.SECOND!=0
        {
            if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
        else if global.FIRST!=0 &amp;&amp; global.SECOND=0
        {
            if FIRST_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
    }
}



if global.LEVEL==5 || global.LEVEL==6 || global.LEVEL==11
{
    if global.FIRST*global.SECOND == global.TARGET
    {
        if reached == true
        {
        o_Hint.hint = 0;
        global.FIRST = 0;
        global.SECOND = 0;
        }
        if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
        {
        alarm[0] = room_speed/4;
        reached = true;
        }
    
    //instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if (global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST*global.SECOND!=global.TARGET) || (global.FIRST!=0 &amp;&amp; global.TARGET%global.FIRST!=0) || (global.FIRST!=0 &amp;&amp; global.TARGET/global.FIRST&gt;9)
    {
        if reached == true
        {
            o_Hint.hint = 0;
            global.FIRST = 0;
            global.SECOND = 0;
        }
        if global.FIRST!=0 &amp;&amp; global.SECOND!=0
        {
            if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
        else if global.FIRST!=0 &amp;&amp; global.SECOND=0
        {
            if FIRST_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
    }
}



if global.LEVEL==7 || global.LEVEL==8 || global.LEVEL==12
{
    if global.FIRST/global.SECOND == global.TARGET
    {
        if reached == true
        {
        o_Hint.hint = 0;
        global.FIRST = 0;
        global.SECOND = 0;
        }
        if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
        {
        alarm[0] = room_speed/4;
        reached = true;
        }
    
    //instance_create((view_xview+view_wview)/2, view_yview+80, o_CorrectText);
    }
    
    if (global.FIRST!=0 &amp;&amp; global.SECOND!=0 &amp;&amp; global.FIRST/global.SECOND!=global.TARGET) || (global.FIRST!=0 &amp;&amp; global.FIRST/global.TARGET!=floor(global.FIRST/global.TARGET))
    {
        if reached == true
        {
            o_Hint.hint = 0;
            global.FIRST = 0;
            global.SECOND = 0;
        }
        if global.FIRST!=0 &amp;&amp; global.SECOND!=0
        {
            if FIRST_NUM.y&lt;=NUM_Y &amp;&amp; SECOND_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
        else if global.FIRST!=0 &amp;&amp; global.SECOND=0
        {
            if FIRST_NUM.y&lt;=NUM_Y
            {
                alarm[1] = room_speed/4;
                reached = true;
            }
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.PER_SECOND /= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);

draw_set_color(make_color_rgb(91, 106, 242));
draw_rectangle(view_xview, view_yview+(view_hview/2), view_xview+view_wview, view_yview+view_hview, false);

draw_set_color(make_color_rgb(167, 213, 242));
draw_rectangle(view_xview, view_yview, view_xview+view_wview, view_yview+(view_hview/4), false);

draw_set_color(make_color_rgb(140, 133, 34));
draw_rectangle_color(view_xview, view_yview+(view_hview/3)+20, view_xview+view_wview, view_yview+(view_hview/3)+35, make_color_rgb(102, 136, 38), make_color_rgb(102, 136, 38), make_color_rgb(140, 133, 34), make_color_rgb(140, 133, 34), false);
draw_rectangle_color(view_xview, view_yview+(view_hview/3)+35, view_xview+view_wview, view_yview+(view_hview/3)+50, make_color_rgb(140, 133, 34), make_color_rgb(140, 133, 34), make_color_rgb(102, 136, 38), make_color_rgb(102, 136, 38), false);

draw_set_halign(fa_right);
draw_set_valign(fa_top);
draw_set_color(c_black);
draw_set_font(f_Info);
draw_text(view_xview+view_wview-14, view_yview+34, "Lumber: " + string(LUMBER));

draw_set_halign(fa_right);
draw_set_valign(fa_top);
draw_text(view_xview+view_wview-14, view_yview+4, "Score: " + string(score));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.PER_SECOND *= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
